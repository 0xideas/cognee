[tool.poetry]
name = "cognee"
version = "0.1.0"
description = "Cognee - is a library for enriching LLM context with a semantic layer for better understanding and reasoning."
authors = ["Vasilije Markovic"]
readme = "README.md"
license = "Apache-2.0"
homepage = "https://www.cognee.ai"
repository = "https://github.com/topoteretes/cognee "
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",]
[tool.poetry.repository]
url = "https://github.com/topoteretes/cognee"
[tool.poetry.dependencies]
python = "^3.10"
langchain = "^0.0.338"
openai = "1.12.0"
python-dotenv = "1.0.1"
fastapi = "0.104.1"
uvicorn = "0.22.0"
boto3 = "^1.26.125"
gunicorn = "^20.1.0"
sqlalchemy = "^2.0.21"
asyncpg = "^0.28.0"
instructor = "^0.3.4"
networkx = "^3.2.1"
graphviz = "^0.20.1"
langdetect = "^1.0.9"
iso639 = "^0.1.4"
debugpy = "^1.8.0"
pyarrow = "^15.0.0"
pylint = "^3.0.3"
aiosqlite = "^0.20.0"
pymupdf = "^1.23.25"
pandas = "^2.2.1"
greenlet = "^3.0.3"
ruff = "^0.2.2"

[tool.poetry.extras]
dbt = ["dbt-core", "dbt-redshift", "dbt-bigquery", "dbt-duckdb", "dbt-snowflake", "dbt-athena-community", "dbt-databricks"]
gcp = ["grpcio", "google-cloud-bigquery", "db-dtypes", "gcsfs"]
# bigquery is alias on gcp extras
bigquery = ["grpcio", "google-cloud-bigquery", "pyarrow", "db-dtypes", "gcsfs"]
postgres = ["psycopg2-binary", "psycopg2cffi"]
redshift = ["psycopg2-binary", "psycopg2cffi"]
parquet = ["pyarrow"]
duckdb = ["duckdb"]
filesystem = ["s3fs", "botocore"]
s3 = ["s3fs", "botocore"]
gs = ["gcsfs"]
az = ["adlfs"]
snowflake = ["snowflake-connector-python"]
motherduck = ["duckdb", "pyarrow"]
cli = ["pipdeptree", "cron-descriptor"]
athena = ["pyathena", "pyarrow", "s3fs", "botocore"]
weaviate = ["weaviate-client"]
mssql = ["pyodbc"]
synapse = ["pyodbc", "adlfs", "pyarrow"]
qdrant = ["qdrant-client"]
databricks = ["databricks-sql-connector"]
lancedb = ["lancedb"]
pinecone = ["pinecone-client"]
neo4j = ["neo4j", "py2neo"]
notebook =[ "ipykernel", "ipywidgets", "jupyterlab", "jupyterlab_widgets", "jupyterlab-server", "jupyterlab-git"]

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.3"
mkdocs-material = {extras = ["imaging"], version = "^9.5.9"}
mkdocstrings = "^0.22.0"
mkdocstrings-python = "^1.1.2"
pytest-examples = "^0.0.10"
mkdocs-jupyter = "^0.24.6"
mkdocs-rss-plugin = "^1.12.0"
mkdocs-minify-plugin = "^0.8.0"
mkdocs-redirects = "^1.2.1"

[tool.poetry.group.test-docs.dependencies]
fastapi = "^0.109.2"
redis = "^5.0.1"
diskcache = "^5.6.3"
pandas = "^2.2.0"
tabulate = "^0.9.0"


[tool.ruff] # https://beta.ruff.rs/docs/
line-length = 100
ignore = ["F401"]
ignore-init-module-imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
