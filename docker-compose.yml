version: "3.9"

services:
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/pleaseletmein
      - NEO4J_PLUGINS=["apoc"]
    networks:
      - cognee_backend

  cognee:
    container_name: cognee
    networks:
      - cognee_backend
    build:
      context: ./
    volumes:
      - "./:/app"
      - ./.data:/app/.data
    environment:
      - HOST=0.0.0.0
      - ENVIRONMENT=local
      - PYTHONPATH=.
    profiles: ["exclude-from-up"]
    ports:
      - 8000:8000
      - 443:443
      - 80:80
      - 50051:50051
      - 5678:5678
#      - 5432:5432
    depends_on:
      - postgres
      - neo4j
      - frontend
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 8GB
  frontend:
    container_name: frontend
    build:
      context: ./cognee-frontend
      dockerfile: Dockerfile
    volumes:
      - "./cognee-frontend:/app"
    ports:
      - "3000:3000"
    networks:
      - cognee_backend


  postgres:
     image: postgres
     container_name: postgres
     environment:
       - POSTGRES_HOST_AUTH_METHOD=trust
       - POSTGRES_USER=bla
       - POSTGRES_PASSWORD=bla
       - POSTGRES_DB=bubu

     networks:
       - cognee_backend
     ports:
       - "5432:5432"
  litellm:
    build:
      context: .
      args:
        target: runtime
    image: ghcr.io/berriai/litellm:main-latest
    ports:
      - "4000:4000" # Map the container port to the host, change the host port if necessary
    volumes:
      - ./litellm-config.yaml:/app/config.yaml # Mount the local configuration file
    # You can change the port or number of workers as per your requirements or pass any new supported CLI augument. Make sure the port passed here matches with the container port defined above in `ports` value
    command: [ "--config", "/app/config.yaml", "--port", "4000", "--num_workers", "8" ]
  falkordb:
    image: falkordb/falkordb:edge
    container_name: falkordb
    ports:
      - "6379:6379"
      - "3001:3000"
    networks:
      - cognee_backend

networks:
  cognee_backend:
    name: cognee_backend

